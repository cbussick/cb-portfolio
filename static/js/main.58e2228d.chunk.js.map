{"version":3,"sources":["interfaces/Section.ts","helpers/scrollToElement.ts","components/CBTextGradient/CBTextGradient.tsx","components/CBLogo/CBLogoStyles.ts","components/CBLogo/CBLogo.tsx","components/CBHeader/CBHeaderStyles.ts","components/CBHeader/headerLinkData.ts","interfaces/Project.ts","components/CBHeader/CBHeader.tsx","components/CBSectionContainer/CBSectionContainerStyles.ts","components/CBSectionContainer/CBSectionContainer.tsx","components/sections/CBContactSection/CBContactSection.tsx","resources/me-and-bruno.jpg","components/sections/CBHomeSection/CBHomeSection.tsx","components/CBProjectCard/CBProjectCardStyles.ts","components/CBProjectCard/CBProjectCard.tsx","resources/bpm-tapper.png","resources/portfolio-website.png","resources/vbs-logo.svg","components/sections/CBProjectsSection/projectsData.tsx","components/sections/CBProjectsSection/CBProjectsSection.tsx","theme/theme.ts","App.tsx","index.tsx"],"names":["Section","scrollToElement","e","selector","element","document","querySelector","scrollIntoView","behavior","preventDefault","window","history","pushState","replace","title","location","pathname","search","CBTextGradient","props","theme","useTheme","Typography","component","sx","background","palette","primary","main","dark","backgroundClip","color","fontStyle","fontWeight","StyledLogo","styled","Link","textDecoration","CBLogo","Box","flexGrow","display","onClick","undefined","cursor","variant","StyledHeader","AppBar","shouldForwardProp","prop","backgroundColor","default","transition","boxShadow","isPageScrolled","shadows","padding","spacing","StyledHeaderLink","Button","justifyContent","isMobileViewport","paddingRight","text","ProjectThumbnailType","headerLinks","id","label","section","Home","icon","Projects","Construction","Contact","Contacts","CBHeader","useScrollTrigger","disableHysteresis","threshold","target","useMediaQuery","breakpoints","down","useState","isMobileMenuOpen","setIsMobileMenuOpen","GitHubLink","href","startIcon","GitHub","classes","className","IconButton","titleAccess","headerElements","map","link","Toolbar","toggled","toggle","Drawer","open","onClose","StyledContainer","Container","flexDirection","alignItems","minHeight","paddingTop","CBSectionContainer","sectionId","find","maxWidth","children","eMail","CBContactSection","textAlign","CBHomeSection","style","margin","marginTop","src","meAndBruno","alt","width","StyledCard","Card","CBProjectCard","project","CardHeader","name","titleTypographyProps","subheader","techStack","join","subheaderTypographyProps","pt","Divider","mb","thumbnailType","None","CardMedia","Image","ReactPlayer","image","thumbnail","url","Video","controls","CardContent","description","CardActions","disableSpacing","endIcon","DoubleArrow","projects","vbsLogo","portfolio","bpmTapper","CBProjectsSection","projectCards","Grid","item","container","createTheme","secondary","typography","fontFamily","h1","marginBottom","body1","fontSize","body2","caption","subtitle1","themeWithOverrides","components","MuiContainer","styleOverrides","root","MuiLink","light","contrastText","MuiButton","textTransform","MuiCard","borderRadius","themeWithResponsiveFontSizes","responsiveFontSizes","factor","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.58e2228d.chunk.js","sourcesContent":["export enum Section {\r\n  Home = \"home\",\r\n  Projects = \"projects\",\r\n  Contact = \"contact\",\r\n}\r\n","export const scrollToElement = (\r\n  e:\r\n    | React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n    | React.MouseEvent<HTMLSpanElement, MouseEvent>,\r\n  selector: string | undefined\r\n): void => {\r\n  if (selector) {\r\n    const element = document.querySelector(selector);\r\n    element?.scrollIntoView({ behavior: \"smooth\" });\r\n    // Necessary to have `href` and not skip the smooth scrolling\r\n    e.preventDefault();\r\n    // Since we prevent the default behavior and therefore the changing of the hash via `href`,\r\n    // we change the hash manually here\r\n    window.history.pushState(null, selector.replace(\"#\", \"\"), selector);\r\n  } else {\r\n    // Scroll back up to the top of the page\r\n    const element = document.querySelector(\"body\");\r\n    element?.scrollIntoView({ behavior: \"smooth\" });\r\n\r\n    window.history.pushState(\r\n      \"\",\r\n      document.title,\r\n      window.location.pathname + window.location.search\r\n    );\r\n  }\r\n};\r\n","import { Typography, useTheme } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { CBTextGradientProps } from \"./CBTextGradientInterfaces\";\r\n\r\nconst CBTextGradient = (props: CBTextGradientProps): JSX.Element => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Typography\r\n      {...props}\r\n      component=\"em\"\r\n      sx={{\r\n        background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 100%)`,\r\n        backgroundClip: \"text\",\r\n        color: \"transparent\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CBTextGradient;\r\n","import { Link, styled } from \"@mui/material\";\r\n\r\nexport const StyledLogo = styled(Link)(() => ({\r\n  textDecoration: \"none\",\r\n  background: \"transparent\",\r\n  \"&:hover\": {\r\n    background: \"transparent\",\r\n  },\r\n}));\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { scrollToElement } from \"../../helpers/scrollToElement\";\r\nimport CBTextGradient from \"../CBTextGradient/CBTextGradient\";\r\nimport { StyledLogo } from \"./CBLogoStyles\";\r\n\r\nconst CBLogo = (): JSX.Element => (\r\n  <Box sx={{ flexGrow: 1, display: \"flex\" }}>\r\n    <StyledLogo\r\n      onClick={(e) => scrollToElement(e, undefined)}\r\n      sx={{ cursor: \"pointer\" }}\r\n    >\r\n      <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n        👋 <CBTextGradient variant=\"h5\">Christopher Bussick</CBTextGradient>\r\n      </Typography>\r\n    </StyledLogo>\r\n  </Box>\r\n);\r\n\r\nexport default CBLogo;\r\n","import { AppBar, Button, styled } from \"@mui/material\";\r\nimport {\r\n  CBStyledHeaderLinkProps,\r\n  CBStyledHeaderProps,\r\n} from \"./CBHeaderInterfaces\";\r\n\r\nconst shouldForwardHeaderProp = (prop: keyof CBStyledHeaderProps) =>\r\n  prop !== \"isPageScrolled\";\r\n\r\nconst shouldForwardLinkProp = (prop: keyof CBStyledHeaderLinkProps) =>\r\n  prop !== \"isMobileViewport\";\r\n\r\nexport const StyledHeader = styled(AppBar, {\r\n  shouldForwardProp: shouldForwardHeaderProp,\r\n})<CBStyledHeaderProps>(({ theme, ...props }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n  transition: \"0.3s\",\r\n  boxShadow: props.isPageScrolled ? theme.shadows[6] : \"none\",\r\n  padding: props.isPageScrolled ? undefined : `${theme.spacing(2)} 0px`,\r\n}));\r\n\r\nexport const StyledHeaderLink = styled(Button, {\r\n  shouldForwardProp: shouldForwardLinkProp,\r\n})<CBStyledHeaderLinkProps>(({ theme, ...props }) => ({\r\n  padding: theme.spacing(2),\r\n  justifyContent: props.isMobileViewport ? \"flex-start\" : undefined,\r\n  paddingRight: props.isMobileViewport ? theme.spacing(5) : undefined,\r\n  // This notation with alpha/opacity at the end is necessary to have a proper transition with a gradient on hover\r\n  color: `${theme.palette.text.primary}FF`,\r\n  \".link-icon\": {\r\n    transition: \"0.2s\",\r\n  },\r\n  \".link-label\": {\r\n    transition: \"0.2s\",\r\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 100%)`,\r\n    backgroundClip: \"text\",\r\n  },\r\n  \"&:hover\": {\r\n    // Necessary to disable the default hover `backgroundColor` of a button\r\n    backgroundColor: \"transparent\",\r\n    \".link-icon\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    \".link-label\": {\r\n      color: `${theme.palette.text.primary}00`,\r\n      // Necessary here to override the theme link styling\r\n      background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 100%)`,\r\n      backgroundClip: \"text\",\r\n    },\r\n  },\r\n}));\r\n","import { Construction, Contacts, Home } from \"@mui/icons-material/\";\r\nimport { HeaderLink } from \"../../interfaces/HeaderLink\";\r\nimport { Section } from \"../../interfaces/Section\";\r\n\r\nexport const headerLinks: HeaderLink[] = [\r\n  { id: \"\", label: \"Home\", section: Section.Home, icon: Home },\r\n  {\r\n    id: \"projects\",\r\n    label: \"Projects\",\r\n    section: Section.Projects,\r\n    icon: Construction,\r\n  },\r\n  {\r\n    id: \"contact-me\",\r\n    label: \"Contact me\",\r\n    section: Section.Contact,\r\n    icon: Contacts,\r\n  },\r\n];\r\n\r\nexport const getHeaderLinkForSection = (\r\n  section: Section\r\n): HeaderLink | undefined =>\r\n  headerLinks.find((link) => link.section === section);\r\n","import { TypographyProps } from \"@mui/material\";\n\nexport enum ProjectThumbnailType {\n  Image = \"image\",\n  Video = \"video\",\n  None = \"none\",\n}\n\nexport interface Project {\n  id: string;\n  name: string;\n  thumbnailType: ProjectThumbnailType;\n  thumbnail?: string;\n  url: string;\n  description: TypographyProps[\"children\"];\n  techStack: string[];\n}\n","import { GitHub } from \"@mui/icons-material\";\r\nimport {\r\n  Drawer,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  useMediaQuery,\r\n  useScrollTrigger,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { Twirl as Hamburger } from \"hamburger-react\";\r\nimport React, { useState } from \"react\";\r\nimport { scrollToElement } from \"../../helpers/scrollToElement\";\r\nimport CBLogo from \"../CBLogo/CBLogo\";\r\nimport { StyledHeader, StyledHeaderLink } from \"./CBHeaderStyles\";\r\nimport { headerLinks } from \"./headerLinkData\";\r\n\r\nconst CBHeader = (): JSX.Element => {\r\n  const theme = useTheme();\r\n\r\n  const isPageScrolled = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 10,\r\n    target: window,\r\n  });\r\n\r\n  const isMobileViewport = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState<boolean>(false);\r\n\r\n  const GitHubLink = isMobileViewport ? (\r\n    <StyledHeaderLink\r\n      href=\"https://github.com/ChristopherBussick/\"\r\n      startIcon={<GitHub />}\r\n      classes={{ startIcon: \"link-icon\" }}\r\n      isMobileViewport={isMobileViewport}\r\n    >\r\n      <Typography variant=\"subtitle1\" component=\"span\" className=\"link-label\">\r\n        Me on GitHub\r\n      </Typography>\r\n    </StyledHeaderLink>\r\n  ) : (\r\n    <IconButton href=\"https://github.com/ChristopherBussick/\" target=\"_blank\">\r\n      <GitHub titleAccess=\"Me on GitHub\" />\r\n    </IconButton>\r\n  );\r\n\r\n  const headerElements: JSX.Element[] = headerLinks.map((link) => {\r\n    const selector = link.id === \"\" ? undefined : `#${link.id}`;\r\n\r\n    return (\r\n      <StyledHeaderLink\r\n        key={link.id}\r\n        href={selector}\r\n        onClick={(e) => {\r\n          scrollToElement(e, selector);\r\n        }}\r\n        startIcon={<link.icon />}\r\n        classes={{ startIcon: \"link-icon\" }}\r\n        isMobileViewport={isMobileViewport}\r\n      >\r\n        <Typography variant=\"subtitle1\" component=\"span\" className=\"link-label\">\r\n          {link.label}\r\n        </Typography>\r\n      </StyledHeaderLink>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <StyledHeader isPageScrolled={isPageScrolled}>\r\n      <Toolbar component=\"nav\">\r\n        <CBLogo />\r\n        {isMobileViewport ? (\r\n          <Hamburger toggled={isMobileMenuOpen} toggle={setIsMobileMenuOpen} />\r\n        ) : (\r\n          <>\r\n            {headerElements}\r\n            {GitHubLink}\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n      {isMobileViewport && (\r\n        <Drawer\r\n          open={isMobileMenuOpen}\r\n          onClose={() => setIsMobileMenuOpen(false)}\r\n        >\r\n          {headerElements}\r\n          {GitHubLink}\r\n        </Drawer>\r\n      )}\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default CBHeader;\r\n","import { Container, styled } from \"@mui/material\";\r\nimport { StyledContainerProps } from \"./CBSectionContainerInterfaces\";\r\n\r\nconst shouldForwardProp = (prop: keyof StyledContainerProps) =>\r\n  prop !== \"backgroundColor\";\r\n\r\nexport const StyledContainer = styled(Container, {\r\n  shouldForwardProp,\r\n})<StyledContainerProps>(({ theme, ...props }) => ({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  minHeight: \"100vh\",\r\n  paddingTop: theme.spacing(14),\r\n  backgroundColor: props.backgroundColor,\r\n}));\r\n","import React from \"react\";\r\nimport { getHeaderLinkForSection } from \"../CBHeader/headerLinkData\";\r\nimport { CBSectionContainerProps } from \"./CBSectionContainerInterfaces\";\r\nimport { StyledContainer } from \"./CBSectionContainerStyles\";\r\n\r\nconst CBSectionContainer = (props: CBSectionContainerProps): JSX.Element => {\r\n  const sectionId = getHeaderLinkForSection(props.section)?.id;\r\n  return (\r\n    <StyledContainer\r\n      {...props}\r\n      maxWidth=\"xl\"\r\n      backgroundColor={props.backgroundColor}\r\n      // `|| undefined` is necessary to not pass the sectionId prop to the DOM element\r\n      // when the returned `sectionId` is an empty string (\"\")\r\n      id={sectionId || undefined}\r\n    >\r\n      {props.children}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default CBSectionContainer;\r\n","import { Link, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Section } from \"../../../interfaces/Section\";\r\nimport CBSectionContainer from \"../../CBSectionContainer/CBSectionContainer\";\r\nimport CBTextGradient from \"../../CBTextGradient/CBTextGradient\";\r\n\r\nconst eMail = \"bussick.christopher@gmail.com\";\r\n\r\nconst CBContactSection = (): JSX.Element => (\r\n  <CBSectionContainer section={Section.Contact}>\r\n    <Typography variant=\"h1\" component=\"div\" sx={{ textAlign: \"center\" }}>\r\n      👋\r\n      <br />\r\n      <CBTextGradient variant=\"h1\">Reach out</CBTextGradient> to me!\r\n    </Typography>\r\n    <address>\r\n      EMail: <Link href={`mailto:${eMail}`}>{eMail}</Link>\r\n    </address>\r\n  </CBSectionContainer>\r\n);\r\n\r\nexport default CBContactSection;\r\n","export default __webpack_public_path__ + \"static/media/me-and-bruno.8164df22.jpg\";","import { Link, Typography, useTheme } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Section } from \"../../../interfaces/Section\";\r\nimport meAndBruno from \"../../../resources/me-and-bruno.jpg\";\r\nimport CBSectionContainer from \"../../CBSectionContainer/CBSectionContainer\";\r\nimport CBTextGradient from \"../../CBTextGradient/CBTextGradient\";\r\n\r\nconst CBHomeSection = (): JSX.Element => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <CBSectionContainer section={Section.Home}>\r\n      <Typography variant=\"h1\" component=\"div\" sx={{ textAlign: \"center\" }}>\r\n        👋\r\n        <br />\r\n        <CBTextGradient variant=\"h1\">Welcome</CBTextGradient>\r\n      </Typography>\r\n      <Typography sx={{ textAlign: \"justify\" }}>\r\n        I&apos;m Christopher!\r\n        <br />I do software development for both the web and{\" \"}\r\n        <Link\r\n          href=\"https://en.wikipedia.org/wiki/Virtual_reality\"\r\n          target=\"_blank\"\r\n        >\r\n          VR\r\n        </Link>{\" \"}\r\n        and study{\" \"}\r\n        <Link href=\"https://www.w-hs.de/medieninformatik-ge/\" target=\"_blank\">\r\n          media informatics\r\n        </Link>{\" \"}\r\n        at the{\" \"}\r\n        <Link href=\"https://www.w-hs.de/\" target=\"_blank\">\r\n          WH\r\n        </Link>{\" \"}\r\n        in Gelsenkirchen, Germany 🇩🇪. Apart from computer science stuff I also\r\n        enjoy anime/manga, sports and music production. I currently live in\r\n        Gladbeck.\r\n      </Typography>\r\n      <figure\r\n        style={{\r\n          padding: 0,\r\n          margin: 0,\r\n          marginTop: theme.spacing(7),\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          src={meAndBruno}\r\n          alt=\"Me and Bruno\"\r\n          style={{\r\n            width: 650,\r\n            maxWidth: \"100%\",\r\n            boxShadow: theme.shadows[10],\r\n          }}\r\n        />\r\n        <figcaption style={{ textAlign: \"start\" }}>\r\n          <Typography variant=\"caption\">Me and Bruno :)</Typography>\r\n        </figcaption>\r\n      </figure>\r\n    </CBSectionContainer>\r\n  );\r\n};\r\n\r\nexport default CBHomeSection;\r\n","import { Card, styled } from \"@mui/material\";\n\nexport const StyledCard = styled(Card)(({ theme }) => ({\n  maxWidth: 600,\n  padding: theme.spacing(2),\n  display: \"flex\",\n  flexDirection: \"column\",\n}));\n","import { DoubleArrow } from \"@mui/icons-material\";\r\nimport {\r\n  Button,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Divider,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { ProjectThumbnailType } from \"../../interfaces/Project\";\r\nimport CBTextGradient from \"../CBTextGradient/CBTextGradient\";\r\nimport { CBProjectCardProps } from \"./CBProjectCardInterfaces\";\r\nimport { StyledCard } from \"./CBProjectCardStyles\";\r\n\r\nconst CBProjectCard = (props: CBProjectCardProps): JSX.Element => {\r\n  const theme = useTheme();\r\n\r\n  const { project } = props;\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardHeader\r\n        title={project.name}\r\n        titleTypographyProps={{\r\n          variant: \"h3\",\r\n          component: CBTextGradient,\r\n          // Necessary because the `fontWeight` from the `CBTextGradient` is ignored here for whatever reason\r\n          fontWeight: 600,\r\n          display: \"inline\",\r\n        }}\r\n        subheader={<>Tech Stack: {project.techStack.join(\", \")}</>}\r\n        subheaderTypographyProps={{ variant: \"caption\" }}\r\n        sx={{\r\n          pt: 0,\r\n        }}\r\n      />\r\n      <Divider sx={{ mb: theme.spacing(3) }} />\r\n      {project.thumbnailType !== ProjectThumbnailType.None && (\r\n        <CardMedia\r\n          component={\r\n            project.thumbnailType === ProjectThumbnailType.Image\r\n              ? \"img\"\r\n              : ReactPlayer\r\n          }\r\n          image={\r\n            project.thumbnailType === ProjectThumbnailType.Image\r\n              ? project.thumbnail\r\n              : undefined\r\n          }\r\n          alt={\r\n            project.thumbnailType === ProjectThumbnailType.Image\r\n              ? project.name\r\n              : undefined\r\n          }\r\n          url={\r\n            project.thumbnailType === ProjectThumbnailType.Video\r\n              ? project.url\r\n              : undefined\r\n          }\r\n          controls={\r\n            project.thumbnailType === ProjectThumbnailType.Video\r\n              ? true\r\n              : undefined\r\n          }\r\n          width=\"100%\"\r\n        />\r\n      )}\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"text.primary\"\r\n          sx={{ textAlign: \"justify\" }}\r\n        >\r\n          {project.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing sx={{ flexGrow: 1, alignItems: \"flex-end\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          aria-label=\"go to the project\"\r\n          endIcon={<DoubleArrow />}\r\n          href={project.url}\r\n          target=\"_blank\"\r\n        >\r\n          <Typography variant=\"body2\">Take me to the project!</Typography>\r\n        </Button>\r\n      </CardActions>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default CBProjectCard;\r\n","export default __webpack_public_path__ + \"static/media/bpm-tapper.02350ab3.png\";","export default __webpack_public_path__ + \"static/media/portfolio-website.df4f385f.png\";","export default __webpack_public_path__ + \"static/media/vbs-logo.774feed2.svg\";","import { Link } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Project, ProjectThumbnailType } from \"../../../interfaces/Project\";\r\nimport bpmTapper from \"../../../resources/bpm-tapper.png\";\r\nimport portfolio from \"../../../resources/portfolio-website.png\";\r\nimport vbsLogo from \"../../../resources/vbs-logo.svg\";\r\n\r\nexport const projects: Project[] = [\r\n  {\r\n    id: \"virtual-boxing-simulator\",\r\n    name: \"Virtual Boxing Simulator\",\r\n    thumbnailType: ProjectThumbnailType.Image,\r\n    thumbnail: vbsLogo,\r\n    url: \"https://www.youtube.com/watch?v=3zIW1LwYYDQ\",\r\n    description: (\r\n      <>\r\n        A game simulating the sport of boxing in virtual reality. This project\r\n        was made by our group of 6 students from the{\" \"}\r\n        <Link href=\"https://www.w-hs.de/\" target=\"_blank\">\r\n          WH\r\n        </Link>{\" \"}\r\n        as part of our respective curricula. It features a rhythm-based game\r\n        mode with multiple difficulties, progress recording and character\r\n        customization.\r\n      </>\r\n    ),\r\n    techStack: [\"Unreal Engine\", \"Blueprints\", \"Oculus Quest\"],\r\n  },\r\n  {\r\n    id: \"portfolio-website\",\r\n    name: \"Portfolio Website\",\r\n    thumbnailType: ProjectThumbnailType.Image,\r\n    thumbnail: portfolio,\r\n    url: \"https://www.cbussick.dev/\",\r\n    description: (\r\n      <>\r\n        The website you are currently on! It serves as my digital portfolio 🚀\r\n      </>\r\n    ),\r\n    techStack: [\"React\", \"TypeScript\", \"Material UI\"],\r\n  },\r\n  {\r\n    id: \"bpm-tapper\",\r\n    name: \"BPM Tapper\",\r\n    thumbnailType: ProjectThumbnailType.Image,\r\n    thumbnail: bpmTapper,\r\n    url: \"https://christopherbussick.github.io/bpm-tapper/\",\r\n    description: (\r\n      <>\r\n        A bpm tapper is a tool used in music production to figure out the tempo\r\n        of a song, measured in beats per minute (bpm). The tool is usually part\r\n        of a{\" \"}\r\n        <Link\r\n          href=\"https://en.wikipedia.org/wiki/Digital_audio_workstation\"\r\n          target=\"_blank\"\r\n        >\r\n          DAW\r\n        </Link>\r\n        , installed on a computer. This project is meant to make the tool\r\n        browser-based.\r\n      </>\r\n    ),\r\n    techStack: [\"React\", \"JavaScript\"],\r\n  },\r\n];\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Section } from \"../../../interfaces/Section\";\r\nimport CBProjectCard from \"../../CBProjectCard/CBProjectCard\";\r\nimport CBSectionContainer from \"../../CBSectionContainer/CBSectionContainer\";\r\nimport CBTextGradient from \"../../CBTextGradient/CBTextGradient\";\r\nimport { projects } from \"./projectsData\";\r\n\r\nconst CBProjectsSection = (): JSX.Element => {\r\n  const projectCards = projects.map((project) => (\r\n    <Grid item key={project.id} sx={{ display: \"flex\" }}>\r\n      <CBProjectCard project={project} />\r\n    </Grid>\r\n  ));\r\n\r\n  return (\r\n    <CBSectionContainer section={Section.Projects}>\r\n      <Typography variant=\"h1\" component=\"div\" sx={{ textAlign: \"center\" }}>\r\n        💡👷\r\n        <br />\r\n        Some <CBTextGradient variant=\"h1\">Projects</CBTextGradient> I&apos;ve\r\n        worked on\r\n      </Typography>\r\n\r\n      <Grid\r\n        container\r\n        spacing={9}\r\n        sx={{ display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        {projectCards}\r\n      </Grid>\r\n    </CBSectionContainer>\r\n  );\r\n};\r\n\r\nexport default CBProjectsSection;\r\n","import { createTheme, responsiveFontSizes, Theme } from \"@mui/material\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#FFC107\",\n      dark: \"#ff7f07\",\n    },\n    secondary: {\n      main: \"#03A9F4\",\n    },\n    text: {\n      primary: \"#737373\",\n    },\n  },\n  typography: {\n    fontFamily: [\"quicksand\", \"sans-serif\"].join(\", \"),\n    h1: {\n      marginBottom: 80,\n    },\n    body1: {\n      fontSize: \"2rem\",\n    },\n    body2: {\n      fontSize: \"1.6rem\",\n    },\n    caption: {\n      fontSize: \"1.2rem\",\n    },\n    subtitle1: {\n      fontSize: \"1.3rem\",\n    },\n  },\n});\n\nconst themeWithOverrides: Theme = {\n  ...theme,\n  components: {\n    MuiContainer: {\n      styleOverrides: {\n        root: {\n          \"& address\": {\n            fontStyle: \"normal\",\n          },\n        },\n      },\n    },\n    MuiLink: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n          textDecoration: \"none\",\n          transition: \"0.3s\",\n          background: `linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0) 65%, ${theme.palette.primary.light} 71%, ${theme.palette.primary.light} 94%, rgba(255,255,255,0) 100%)`,\n          \"&:hover\": {\n            color: theme.palette.primary.contrastText,\n            background: `linear-gradient(180deg, rgba(255,255,255,0) 0%, ${theme.palette.primary.light} 6%, ${theme.palette.primary.light} 94%, rgba(255,255,255,0) 100%)`,\n          },\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: \"none\",\n          fontSize: theme.typography.body2.fontSize,\n        },\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          borderRadius: 12,\n          boxShadow: theme.shadows[10],\n        },\n      },\n    },\n  },\n};\n\nconst themeWithResponsiveFontSizes = responsiveFontSizes(themeWithOverrides, {\n  factor: 3,\n  breakpoints: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\n});\n\nexport default themeWithResponsiveFontSizes;\n","import \"@fontsource/quicksand\";\r\nimport { Container, CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport CBHeader from \"./components/CBHeader/CBHeader\";\r\nimport CBContactSection from \"./components/sections/CBContactSection/CBContactSection\";\r\nimport CBHomeSection from \"./components/sections/CBHomeSection/CBHomeSection\";\r\nimport CBProjectsSection from \"./components/sections/CBProjectsSection/CBProjectsSection\";\r\nimport theme from \"./theme/theme\";\r\n\r\nconst App = (): JSX.Element => (\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Container maxWidth={false}>\r\n      <CBHeader />\r\n      <Container maxWidth={false} component=\"main\">\r\n        <CBHomeSection />\r\n        <CBProjectsSection />\r\n        <CBContactSection />\r\n      </Container>\r\n    </Container>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}