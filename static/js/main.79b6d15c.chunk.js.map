{"version":3,"sources":["interfaces/Section.ts","helpers/scrollToElement.ts","components/CBTextGradient/CBTextGradient.tsx","components/CBLogo/CBLogoStyles.ts","components/CBLogo/CBLogo.tsx","components/CBHeader/CBHeaderStyles.ts","components/CBHeader/headerLinkData.ts","interfaces/Project.ts","components/CBHeader/CBHeader.tsx","components/CBSectionContainer/CBSectionContainerStyles.ts","components/CBSectionContainer/CBSectionContainer.tsx","components/sections/CBContactSection/CBContactSection.tsx","resources/me-and-bruno.jpg","components/sections/CBHomeSection/CBHomeSection.tsx","components/CBProjectCard/CBProjectCardStyles.ts","components/CBProjectCard/CBProjectCard.tsx","resources/bpm-tapper.png","resources/portfolio-website.png","resources/vbs-logo.svg","components/sections/CBProjectsSection/projectsData.tsx","components/sections/CBProjectsSection/CBProjectsSection.tsx","theme/theme.ts","App.tsx","index.tsx"],"names":["Section","scrollToElement","e","selector","element","document","querySelector","scrollIntoView","behavior","preventDefault","window","history","pushState","replace","title","location","pathname","search","CBTextGradient","props","theme","useTheme","Typography","component","sx","background","palette","primary","main","dark","backgroundClip","color","fontStyle","fontWeight","StyledLogo","styled","Link","textDecoration","CBLogo","Box","flexGrow","display","justifyContent","isMobileViewport","undefined","position","isSmallViewport","right","left","zIndex","onClick","cursor","variant","mobileMenuButtonStyles","isInsideDrawer","WebkitTapHighlightColor","alignSelf","marginTop","marginRight","StyledHeader","AppBar","shouldForwardProp","prop","backgroundColor","default","transition","boxShadow","isPageScrolled","shadows","padding","spacing","headerLinkStyles","paddingRight","text","StyledHeaderLink","Button","ProjectThumbnailType","headerLinks","id","label","section","Home","icon","Projects","Construction","Contact","Contacts","CBHeader","useScrollTrigger","disableHysteresis","threshold","target","useMediaQuery","breakpoints","down","useState","isMobileMenuOpen","setIsMobileMenuOpen","MobileMenuButton","toggled","toggle","size","rounded","GitHubLink","href","startIcon","GitHub","classes","className","IconButton","titleAccess","headerElements","map","link","Toolbar","Drawer","open","onClose","StyledContainer","Container","flexDirection","alignItems","minHeight","paddingTop","CBSectionContainer","sectionId","find","maxWidth","children","eMail","CBContactSection","textAlign","CBHomeSection","style","margin","src","meAndBruno","alt","width","StyledCard","Card","CBProjectCard","project","CardHeader","name","titleTypographyProps","subheader","techStack","join","subheaderTypographyProps","pt","Divider","mb","thumbnailType","None","CardMedia","Image","ReactPlayer","image","thumbnail","url","Video","controls","CardContent","description","CardActions","disableSpacing","endIcon","DoubleArrow","projects","vbsLogo","portfolio","bpmTapper","CBProjectsSection","projectCards","Grid","item","container","createTheme","secondary","typography","fontFamily","h1","marginBottom","body1","fontSize","body2","caption","subtitle1","themeWithOverrides","components","MuiContainer","styleOverrides","root","MuiLink","light","contrastText","MuiButton","textTransform","MuiCard","borderRadius","themeWithResponsiveFontSizes","responsiveFontSizes","factor","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79b6d15c.chunk.js","sourcesContent":["export enum Section {\n  Home = \"home\",\n  Projects = \"projects\",\n  Contact = \"contact\",\n}\n","export const scrollToElement = (\n  e:\n    | React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    | React.MouseEvent<HTMLSpanElement, MouseEvent>,\n  selector: string | undefined\n): void => {\n  if (selector) {\n    const element = document.querySelector(selector);\n    element?.scrollIntoView({ behavior: \"smooth\" });\n    // Necessary to have `href` and not skip the smooth scrolling\n    e.preventDefault();\n    // Since we prevent the default behavior and therefore the changing of the hash via `href`,\n    // we change the hash manually here\n    window.history.pushState(null, selector.replace(\"#\", \"\"), selector);\n  } else {\n    // Scroll back up to the top of the page\n    const element = document.querySelector(\"body\");\n    element?.scrollIntoView({ behavior: \"smooth\" });\n\n    window.history.pushState(\n      \"\",\n      document.title,\n      window.location.pathname + window.location.search\n    );\n  }\n};\n","import { Typography, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { CBTextGradientProps } from \"./CBTextGradientInterfaces\";\n\nconst CBTextGradient = (props: CBTextGradientProps): JSX.Element => {\n  const theme = useTheme();\n\n  return (\n    <Typography\n      {...props}\n      component=\"em\"\n      sx={{\n        background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 100%)`,\n        backgroundClip: \"text\",\n        color: \"transparent\",\n        fontStyle: \"normal\",\n        fontWeight: 600,\n      }}\n    />\n  );\n};\n\nexport default CBTextGradient;\n","import { Link, styled } from \"@mui/material\";\n\nexport const StyledLogo = styled(Link)(() => ({\n  textDecoration: \"none\",\n  background: \"transparent\",\n  \"&:hover\": {\n    background: \"transparent\",\n  },\n}));\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { scrollToElement } from \"../../helpers/scrollToElement\";\nimport CBTextGradient from \"../CBTextGradient/CBTextGradient\";\nimport { CBLogoProps } from \"./CBLogoInterfaces\";\nimport { StyledLogo } from \"./CBLogoStyles\";\n\nconst CBLogo = (props: CBLogoProps): JSX.Element => (\n  <Box\n    sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: props.isMobileViewport ? \"center\" : undefined,\n      position: props.isSmallViewport ? \"absolute\" : undefined,\n      right: props.isSmallViewport ? 0 : undefined,\n      left: props.isSmallViewport ? 0 : undefined,\n      // Don't block the mobile menu icon when trying to tap on it\n      zIndex: 0,\n    }}\n  >\n    <StyledLogo\n      onClick={(e) => scrollToElement(e, undefined)}\n      sx={{ cursor: \"pointer\" }}\n    >\n      <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\n        👋 <CBTextGradient variant=\"h5\">Christopher Bussick</CBTextGradient>\n      </Typography>\n    </StyledLogo>\n  </Box>\n);\n\nexport default CBLogo;\n","import { AppBar, Button, styled, Theme } from \"@mui/material\";\nimport {\n  CBStyledHeaderLinkProps,\n  CBStyledHeaderProps,\n} from \"./CBHeaderInterfaces\";\n\nconst shouldForwardHeaderProp = (prop: keyof CBStyledHeaderProps) =>\n  prop !== \"isPageScrolled\";\n\nconst shouldForwardLinkProp = (prop: keyof CBStyledHeaderLinkProps) =>\n  prop !== \"isMobileViewport\";\n\nexport const mobileMenuButtonStyles = (\n  isInsideDrawer: boolean\n): Record<string, unknown> => ({\n  \".hamburger-react\": {\n    // Don't have the mobile menu icon blocked by the logo when it is absolutely positioned\n    // on small viewports\n    zIndex: 1,\n    // Remove blue flashing when tapping the mobile menu icon\n    //\n    // Note: This property is non-standard as of 2021.11.01\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-tap-highlight-color\n    WebkitTapHighlightColor: \"transparent\",\n    alignSelf: isInsideDrawer ? \"flex-end\" : undefined,\n    marginTop: 1,\n    marginRight: 1,\n  },\n});\n\nexport const StyledHeader = styled(AppBar, {\n  shouldForwardProp: shouldForwardHeaderProp,\n})<CBStyledHeaderProps>(({ theme, ...props }) => ({\n  backgroundColor: theme.palette.background.default,\n  transition: \"0.3s\",\n  boxShadow: props.isPageScrolled ? theme.shadows[6] : \"none\",\n  padding: props.isPageScrolled\n    ? undefined\n    : `${theme.spacing(1)} 0px ${theme.spacing(2)} 0px`,\n  ...mobileMenuButtonStyles(false),\n}));\n\nexport const headerLinkStyles = (\n  theme: Theme,\n  props: CBStyledHeaderLinkProps\n): Record<string, unknown> => ({\n  padding: theme.spacing(2),\n  justifyContent: props.isMobileViewport ? \"flex-start\" : undefined,\n  paddingRight: props.isMobileViewport ? theme.spacing(5) : undefined,\n  // This notation with alpha/opacity at the end is necessary to have a proper transition with a gradient on hover\n  color: `${theme.palette.text.primary}FF`,\n  \".link-icon\": {\n    transition: \"0.2s\",\n  },\n  \".link-label\": {\n    transition: \"0.2s\",\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 100%)`,\n    backgroundClip: \"text\",\n  },\n  \"&:hover\": {\n    // Necessary to disable the default hover `backgroundColor` of a button\n    backgroundColor: \"transparent\",\n    \".link-icon\": {\n      color: theme.palette.primary.main,\n    },\n    \".link-label\": {\n      color: `${theme.palette.text.primary}00`,\n      // Necessary here to override the theme link styling\n      background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.primary.dark} 100%)`,\n      backgroundClip: \"text\",\n    },\n  },\n});\n\nexport const StyledHeaderLink = styled(Button, {\n  shouldForwardProp: shouldForwardLinkProp,\n})<CBStyledHeaderLinkProps>(({ theme, ...props }) => ({\n  ...headerLinkStyles(theme, props),\n}));\n","import { Construction, Contacts, Home } from \"@mui/icons-material/\";\nimport { HeaderLink } from \"../../interfaces/HeaderLink\";\nimport { Section } from \"../../interfaces/Section\";\n\nexport const headerLinks: HeaderLink[] = [\n  { id: \"\", label: \"Home\", section: Section.Home, icon: Home },\n  {\n    id: \"projects\",\n    label: \"Projects\",\n    section: Section.Projects,\n    icon: Construction,\n  },\n  {\n    id: \"contact-me\",\n    label: \"Contact me\",\n    section: Section.Contact,\n    icon: Contacts,\n  },\n];\n\nexport const getHeaderLinkForSection = (\n  section: Section\n): HeaderLink | undefined =>\n  headerLinks.find((link) => link.section === section);\n","import { TypographyProps } from \"@mui/material\";\n\nexport enum ProjectThumbnailType {\n  Image = \"image\",\n  Video = \"video\",\n  None = \"none\",\n}\n\nexport interface Project {\n  id: string;\n  name: string;\n  thumbnailType: ProjectThumbnailType;\n  thumbnail?: string;\n  url: string;\n  description: TypographyProps[\"children\"];\n  techStack: string[];\n}\n","import { GitHub } from \"@mui/icons-material\";\nimport {\n  Button,\n  Drawer,\n  IconButton,\n  Toolbar,\n  Typography,\n  useMediaQuery,\n  useScrollTrigger,\n  useTheme,\n} from \"@mui/material\";\nimport { Twirl as Hamburger } from \"hamburger-react\";\nimport React, { useState } from \"react\";\nimport { scrollToElement } from \"../../helpers/scrollToElement\";\nimport CBLogo from \"../CBLogo/CBLogo\";\nimport {\n  headerLinkStyles,\n  mobileMenuButtonStyles,\n  StyledHeader,\n  StyledHeaderLink,\n} from \"./CBHeaderStyles\";\nimport { headerLinks } from \"./headerLinkData\";\n\nconst CBHeader = (): JSX.Element => {\n  const theme = useTheme();\n\n  const isPageScrolled = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 10,\n    target: window,\n  });\n\n  const isMobileViewport = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const isSmallViewport = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState<boolean>(false);\n\n  const MobileMenuButton = (\n    <Hamburger\n      toggled={isMobileMenuOpen}\n      toggle={setIsMobileMenuOpen}\n      label={isMobileMenuOpen ? \"Close menu\" : \"Show menu\"}\n      size={isSmallViewport ? 24 : 32}\n      rounded\n    />\n  );\n\n  const GitHubLink = isSmallViewport ? (\n    <Button\n      href=\"https://github.com/ChristopherBussick/\"\n      startIcon={<GitHub />}\n      classes={{ startIcon: \"link-icon\" }}\n      // Necessary to provide the styling like this in order to have the `target=\"_blank\"` prop here\n      sx={{ ...headerLinkStyles(theme, { isMobileViewport }) }}\n      target=\"_blank\"\n    >\n      <Typography variant=\"subtitle1\" component=\"span\" className=\"link-label\">\n        Me on GitHub\n      </Typography>\n    </Button>\n  ) : (\n    <IconButton href=\"https://github.com/ChristopherBussick/\" target=\"_blank\">\n      <GitHub titleAccess=\"Me on GitHub\" />\n    </IconButton>\n  );\n\n  const headerElements: JSX.Element[] = headerLinks.map((link) => {\n    const selector = link.id === \"\" ? undefined : `#${link.id}`;\n\n    return (\n      <StyledHeaderLink\n        key={link.id}\n        href={selector}\n        onClick={(e) => {\n          scrollToElement(e, selector);\n        }}\n        startIcon={<link.icon />}\n        classes={{ startIcon: \"link-icon\" }}\n        isMobileViewport={isMobileViewport}\n      >\n        <Typography variant=\"subtitle1\" component=\"span\" className=\"link-label\">\n          {link.label}\n        </Typography>\n      </StyledHeaderLink>\n    );\n  });\n\n  return (\n    <StyledHeader isPageScrolled={isPageScrolled}>\n      <Toolbar component=\"nav\">\n        {isMobileViewport ? (\n          <>\n            {MobileMenuButton}\n            <CBLogo\n              isMobileViewport={isMobileViewport}\n              isSmallViewport={isSmallViewport}\n            />\n            {!isSmallViewport && GitHubLink}\n          </>\n        ) : (\n          <>\n            <CBLogo\n              isMobileViewport={isMobileViewport}\n              isSmallViewport={isSmallViewport}\n            />\n            {headerElements}\n            {GitHubLink}\n          </>\n        )}\n      </Toolbar>\n      {isMobileViewport && (\n        <Drawer\n          open={isMobileMenuOpen}\n          onClose={() => setIsMobileMenuOpen(false)}\n          sx={{ ...mobileMenuButtonStyles(true) }}\n        >\n          {MobileMenuButton}\n          {headerElements}\n          {isSmallViewport && GitHubLink}\n        </Drawer>\n      )}\n    </StyledHeader>\n  );\n};\n\nexport default CBHeader;\n","import { Container, styled } from \"@mui/material\";\nimport { StyledContainerProps } from \"./CBSectionContainerInterfaces\";\n\nconst shouldForwardProp = (prop: keyof StyledContainerProps) =>\n  prop !== \"backgroundColor\";\n\nexport const StyledContainer = styled(Container, {\n  shouldForwardProp,\n})<StyledContainerProps>(({ theme, ...props }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  minHeight: \"100vh\",\n  paddingTop: theme.spacing(14),\n  backgroundColor: props.backgroundColor,\n}));\n","import React from \"react\";\nimport { getHeaderLinkForSection } from \"../CBHeader/headerLinkData\";\nimport { CBSectionContainerProps } from \"./CBSectionContainerInterfaces\";\nimport { StyledContainer } from \"./CBSectionContainerStyles\";\n\nconst CBSectionContainer = (props: CBSectionContainerProps): JSX.Element => {\n  const sectionId = getHeaderLinkForSection(props.section)?.id;\n  return (\n    <StyledContainer\n      {...props}\n      maxWidth=\"xl\"\n      backgroundColor={props.backgroundColor}\n      // `|| undefined` is necessary to not pass the sectionId prop to the DOM element\n      // when the returned `sectionId` is an empty string (\"\")\n      id={sectionId || undefined}\n    >\n      {props.children}\n    </StyledContainer>\n  );\n};\n\nexport default CBSectionContainer;\n","import { Link, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { Section } from \"../../../interfaces/Section\";\nimport CBSectionContainer from \"../../CBSectionContainer/CBSectionContainer\";\nimport CBTextGradient from \"../../CBTextGradient/CBTextGradient\";\n\nconst eMail = \"bussick.christopher@gmail.com\";\n\nconst CBContactSection = (): JSX.Element => (\n  <CBSectionContainer section={Section.Contact}>\n    <Typography variant=\"h1\" component=\"div\" sx={{ textAlign: \"center\" }}>\n      👋\n      <br />\n      <CBTextGradient variant=\"h1\">Reach out</CBTextGradient> to me!\n    </Typography>\n    <address>\n      EMail: <Link href={`mailto:${eMail}`}>{eMail}</Link>\n    </address>\n  </CBSectionContainer>\n);\n\nexport default CBContactSection;\n","export default __webpack_public_path__ + \"static/media/me-and-bruno.8164df22.jpg\";","import { Link, Typography, useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport { Section } from \"../../../interfaces/Section\";\nimport meAndBruno from \"../../../resources/me-and-bruno.jpg\";\nimport CBSectionContainer from \"../../CBSectionContainer/CBSectionContainer\";\nimport CBTextGradient from \"../../CBTextGradient/CBTextGradient\";\n\nconst CBHomeSection = (): JSX.Element => {\n  const theme = useTheme();\n\n  return (\n    <CBSectionContainer section={Section.Home}>\n      <Typography variant=\"h1\" component=\"div\" sx={{ textAlign: \"center\" }}>\n        👋\n        <br />\n        <CBTextGradient variant=\"h1\">Welcome</CBTextGradient>\n      </Typography>\n      <Typography sx={{ textAlign: \"justify\" }}>\n        I&apos;m Christopher!\n        <br />I do software development for both the web and{\" \"}\n        <Link\n          href=\"https://en.wikipedia.org/wiki/Virtual_reality\"\n          target=\"_blank\"\n        >\n          VR\n        </Link>{\" \"}\n        and study{\" \"}\n        <Link href=\"https://www.w-hs.de/medieninformatik-ge/\" target=\"_blank\">\n          media informatics\n        </Link>{\" \"}\n        at the{\" \"}\n        <Link href=\"https://www.w-hs.de/\" target=\"_blank\">\n          WH\n        </Link>{\" \"}\n        in Gelsenkirchen, Germany 🇩🇪. Apart from computer science stuff I also\n        enjoy anime/manga, sports and music production. I currently live in\n        Gladbeck.\n      </Typography>\n      <figure\n        style={{\n          padding: 0,\n          margin: 0,\n          marginTop: theme.spacing(7),\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <img\n          src={meAndBruno}\n          alt=\"Me and Bruno\"\n          style={{\n            width: 650,\n            maxWidth: \"100%\",\n            boxShadow: theme.shadows[10],\n          }}\n        />\n        <figcaption style={{ textAlign: \"start\" }}>\n          <Typography variant=\"caption\">Me and Bruno :)</Typography>\n        </figcaption>\n      </figure>\n    </CBSectionContainer>\n  );\n};\n\nexport default CBHomeSection;\n","import { Card, styled } from \"@mui/material\";\n\nexport const StyledCard = styled(Card)(({ theme }) => ({\n  maxWidth: 600,\n  padding: theme.spacing(2),\n  display: \"flex\",\n  flexDirection: \"column\",\n}));\n","import { DoubleArrow } from \"@mui/icons-material\";\nimport {\n  Button,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport React from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { ProjectThumbnailType } from \"../../interfaces/Project\";\nimport CBTextGradient from \"../CBTextGradient/CBTextGradient\";\nimport { CBProjectCardProps } from \"./CBProjectCardInterfaces\";\nimport { StyledCard } from \"./CBProjectCardStyles\";\n\nconst CBProjectCard = (props: CBProjectCardProps): JSX.Element => {\n  const theme = useTheme();\n\n  const { project } = props;\n\n  return (\n    <StyledCard>\n      <CardHeader\n        title={project.name}\n        titleTypographyProps={{\n          variant: \"h3\",\n          component: CBTextGradient,\n          // Necessary because the `fontWeight` from the `CBTextGradient` is ignored here for whatever reason\n          fontWeight: 600,\n          display: \"inline\",\n        }}\n        subheader={<>Tech Stack: {project.techStack.join(\", \")}</>}\n        subheaderTypographyProps={{ variant: \"caption\" }}\n        sx={{\n          pt: 0,\n        }}\n      />\n      <Divider sx={{ mb: theme.spacing(3) }} />\n      {project.thumbnailType !== ProjectThumbnailType.None && (\n        <CardMedia\n          component={\n            project.thumbnailType === ProjectThumbnailType.Image\n              ? \"img\"\n              : ReactPlayer\n          }\n          image={\n            project.thumbnailType === ProjectThumbnailType.Image\n              ? project.thumbnail\n              : undefined\n          }\n          alt={\n            project.thumbnailType === ProjectThumbnailType.Image\n              ? project.name\n              : undefined\n          }\n          url={\n            project.thumbnailType === ProjectThumbnailType.Video\n              ? project.url\n              : undefined\n          }\n          controls={\n            project.thumbnailType === ProjectThumbnailType.Video\n              ? true\n              : undefined\n          }\n          width=\"100%\"\n        />\n      )}\n      <CardContent>\n        <Typography\n          variant=\"body2\"\n          color=\"text.primary\"\n          sx={{ textAlign: \"justify\" }}\n        >\n          {project.description}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing sx={{ flexGrow: 1, alignItems: \"flex-end\" }}>\n        <Button\n          variant=\"contained\"\n          aria-label=\"go to the project\"\n          endIcon={<DoubleArrow />}\n          href={project.url}\n          target=\"_blank\"\n        >\n          <Typography variant=\"body2\">Take me to the project!</Typography>\n        </Button>\n      </CardActions>\n    </StyledCard>\n  );\n};\n\nexport default CBProjectCard;\n","export default __webpack_public_path__ + \"static/media/bpm-tapper.02350ab3.png\";","export default __webpack_public_path__ + \"static/media/portfolio-website.df4f385f.png\";","export default __webpack_public_path__ + \"static/media/vbs-logo.7ad928ab.svg\";","import { Link } from \"@mui/material\";\nimport React from \"react\";\nimport { Project, ProjectThumbnailType } from \"../../../interfaces/Project\";\nimport bpmTapper from \"../../../resources/bpm-tapper.png\";\nimport portfolio from \"../../../resources/portfolio-website.png\";\nimport vbsLogo from \"../../../resources/vbs-logo.svg\";\n\nexport const projects: Project[] = [\n  {\n    id: \"virtual-boxing-simulator\",\n    name: \"Virtual Boxing Simulator\",\n    thumbnailType: ProjectThumbnailType.Image,\n    thumbnail: vbsLogo,\n    url: \"https://www.youtube.com/watch?v=3zIW1LwYYDQ\",\n    description: (\n      <>\n        A game simulating the sport of boxing in virtual reality. This project\n        was made by our group of 6 students from the{\" \"}\n        <Link href=\"https://www.w-hs.de/\" target=\"_blank\">\n          WH\n        </Link>{\" \"}\n        as part of our respective curricula. It features a rhythm-based game\n        mode with multiple difficulties, progress recording and character\n        customization.\n      </>\n    ),\n    techStack: [\"Unreal Engine\", \"Blueprints\", \"Oculus Quest\"],\n  },\n  {\n    id: \"portfolio-website\",\n    name: \"Portfolio Website\",\n    thumbnailType: ProjectThumbnailType.Image,\n    thumbnail: portfolio,\n    url: \"https://www.cbussick.dev/\",\n    description: (\n      <>\n        The website you are currently on! It serves as my digital portfolio 🚀\n      </>\n    ),\n    techStack: [\"React\", \"TypeScript\", \"Material UI\"],\n  },\n  {\n    id: \"bpm-tapper\",\n    name: \"BPM Tapper\",\n    thumbnailType: ProjectThumbnailType.Image,\n    thumbnail: bpmTapper,\n    url: \"https://christopherbussick.github.io/bpm-tapper-sass/\",\n    description: (\n      <>\n        A bpm tapper is a tool used in music production to figure out the tempo\n        of a song, measured in beats per minute (bpm). The tool is usually part\n        of a{\" \"}\n        <Link\n          href=\"https://en.wikipedia.org/wiki/Digital_audio_workstation\"\n          target=\"_blank\"\n        >\n          DAW\n        </Link>\n        , installed on a computer. This project is meant to make the tool\n        browser-based.\n      </>\n    ),\n    techStack: [\"React\", \"JavaScript\"],\n  },\n];\n","import { Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { Section } from \"../../../interfaces/Section\";\nimport CBProjectCard from \"../../CBProjectCard/CBProjectCard\";\nimport CBSectionContainer from \"../../CBSectionContainer/CBSectionContainer\";\nimport CBTextGradient from \"../../CBTextGradient/CBTextGradient\";\nimport { projects } from \"./projectsData\";\n\nconst CBProjectsSection = (): JSX.Element => {\n  const projectCards = projects.map((project) => (\n    <Grid item key={project.id} sx={{ display: \"flex\" }}>\n      <CBProjectCard project={project} />\n    </Grid>\n  ));\n\n  return (\n    <CBSectionContainer section={Section.Projects}>\n      <Typography variant=\"h1\" component=\"div\" sx={{ textAlign: \"center\" }}>\n        💡👷\n        <br />\n        Some <CBTextGradient variant=\"h1\">Projects</CBTextGradient> I&apos;ve\n        worked on\n      </Typography>\n\n      <Grid\n        container\n        spacing={9}\n        sx={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        {projectCards}\n      </Grid>\n    </CBSectionContainer>\n  );\n};\n\nexport default CBProjectsSection;\n","import { createTheme, responsiveFontSizes, Theme } from \"@mui/material\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#FFC107\",\n      dark: \"#ff7f07\",\n    },\n    secondary: {\n      main: \"#03A9F4\",\n    },\n    text: {\n      primary: \"#737373\",\n    },\n  },\n  typography: {\n    fontFamily: [\"quicksand\", \"sans-serif\"].join(\", \"),\n    h1: {\n      marginBottom: 80,\n    },\n    body1: {\n      fontSize: \"2rem\",\n    },\n    body2: {\n      fontSize: \"1.6rem\",\n    },\n    caption: {\n      fontSize: \"1.2rem\",\n    },\n    subtitle1: {\n      fontSize: \"1.3rem\",\n    },\n  },\n});\n\nconst themeWithOverrides: Theme = {\n  ...theme,\n  components: {\n    MuiContainer: {\n      styleOverrides: {\n        root: {\n          \"& address\": {\n            fontStyle: \"normal\",\n          },\n        },\n      },\n    },\n    MuiLink: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.text.primary,\n          textDecoration: \"none\",\n          transition: \"0.3s\",\n          background: `linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0) 65%, ${theme.palette.primary.light} 71%, ${theme.palette.primary.light} 94%, rgba(255,255,255,0) 100%)`,\n          \"&:hover\": {\n            color: theme.palette.primary.contrastText,\n            background: `linear-gradient(180deg, rgba(255,255,255,0) 0%, ${theme.palette.primary.light} 6%, ${theme.palette.primary.light} 94%, rgba(255,255,255,0) 100%)`,\n          },\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: \"none\",\n          fontSize: theme.typography.body2.fontSize,\n        },\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          borderRadius: 12,\n          boxShadow: theme.shadows[10],\n        },\n      },\n    },\n  },\n};\n\nconst themeWithResponsiveFontSizes = responsiveFontSizes(themeWithOverrides, {\n  factor: 3,\n  breakpoints: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\n});\n\nexport default themeWithResponsiveFontSizes;\n","import \"@fontsource/quicksand\";\nimport { Container, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport CBHeader from \"./components/CBHeader/CBHeader\";\nimport CBContactSection from \"./components/sections/CBContactSection/CBContactSection\";\nimport CBHomeSection from \"./components/sections/CBHomeSection/CBHomeSection\";\nimport CBProjectsSection from \"./components/sections/CBProjectsSection/CBProjectsSection\";\nimport theme from \"./theme/theme\";\n\nconst App = (): JSX.Element => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Container maxWidth={false}>\n      <CBHeader />\n      <Container maxWidth={false} component=\"main\">\n        <CBHomeSection />\n        <CBProjectsSection />\n        <CBContactSection />\n      </Container>\n    </Container>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}